def connect_wifi():
    wifi = pywifi.PyWiFi()  # 创建一个wifi对象
    ifaces = wifi.interfaces()[0]  # 取第一个无限网卡
    print(ifaces.name())  # 输出无线网卡名称
    ifaces.disconnect()  # 断开网卡连接
    time.sleep(3)  # 缓冲3秒


    profile = pywifi.Profile()  # 配置文件
    profile.ssid = " i-NUIST"  # wifi名称 #直接改为i-NUIST

   profile.auth=const.AUTH_ALG_OPEN
   profile.akm.append(const.AKM_TYPE_NONE) #学校wifi连接无需密码，将加密类型设为无后无需进行其他设置


    ifaces.remove_all_network_profiles()  # 删除其他配置文件
    tmp_profile = ifaces.add_network_profile(profile)  # 加载配置文件

    ifaces.connect(tmp_profile)  # 连接
   '''
   下面整段可以考虑删掉
   连接wifi后一般会直接通过默认浏览器弹出portal，大多数可以保存登录信息
   等待确认耗时太长，效率还不如手动点一下
   '''
    time.sleep(10)  # 尝试10秒能否成功连接
    isok = True
    if ifaces.status() == const.IFACE_CONNECTED:
        print("成功连接")
    else:
        print("失败")
    #ifaces.disconnect()  # 断开连接
    time.sleep(1)
    return isok
